from telegram import InlineKeyboardButton, InlineKeyboardMarkup


# keyboards/student_kb.py - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ student_main_keyboard
def student_main_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É—á–µ–Ω–∏–∫–∞"""
    keyboard = [
        [
            InlineKeyboardButton("üìù –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç", callback_data="common_start_test"),
            InlineKeyboardButton("üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="common_stats")
        ],
        [
            InlineKeyboardButton("üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", callback_data="student_recommendations"),
            InlineKeyboardButton("üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", callback_data="common_achievements")
        ],
        [
            InlineKeyboardButton("üîç –°–ø—Ä–∞–≤–∫–∞", callback_data="common_help")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


def topic_selection_keyboard(topics) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    keyboard = []
    for topic in topics:
        keyboard.append([
            InlineKeyboardButton(
                topic["name"],
                callback_data=f"quiz_start_{topic['id']}"
            )
        ])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–ª—É—á–∞–π–Ω–æ–π —Ç–µ–º—ã
    keyboard.append([
        InlineKeyboardButton(
            "üé≤ –°–ª—É—á–∞–π–Ω–∞—è —Ç–µ–º–∞",
            callback_data="quiz_start_random"
        )
    ])

    return InlineKeyboardMarkup(keyboard)


def single_question_keyboard(question_id, options) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ —Å –æ–¥–∏–Ω–æ—á–Ω—ã–º –≤—ã–±–æ—Ä–æ–º"""
    keyboard = []
    for i, option in enumerate(options):
        keyboard.append([
            InlineKeyboardButton(option, callback_data=f"quiz_answer_{question_id}_{i}")
        ])

    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞
    keyboard.append([
        InlineKeyboardButton("‚è© –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="quiz_skip")
    ])

    return InlineKeyboardMarkup(keyboard)


def multiple_question_keyboard(question_id, options, selected_options=None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –≤—ã–±–æ—Ä–æ–º"""
    if selected_options is None:
        selected_options = []

    keyboard = []
    for i, option in enumerate(options):
        # –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫–±–æ–∫—Å—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        is_selected = i in selected_options
        button_text = f"{'‚òë' if is_selected else '‚òê'} {option}"
        keyboard.append([
            InlineKeyboardButton(button_text, callback_data=f"quiz_answer_{question_id}_{i}")
        ])

    # –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –ø—Ä–æ–ø—É—Å–∫–∞
    keyboard.append([
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä", callback_data=f"quiz_confirm_{question_id}")
    ])
    keyboard.append([
        InlineKeyboardButton("‚è© –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="quiz_skip")
    ])

    return InlineKeyboardMarkup(keyboard)


def sequence_question_keyboard(question_id, options, current_sequence=None) -> InlineKeyboardMarkup:
    keyboard = []

    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ current_sequence - –≤—Å–µ–≥–¥–∞ —Å–ø–∏—Å–æ–∫
    if current_sequence is None:
        current_sequence = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–µ–Ω–Ω–æ –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞
    if len(current_sequence) == 0:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –≤—ã–±–æ—Ä–∞
        for i, option in enumerate(options):
            keyboard.append([
                InlineKeyboardButton(f"{i + 1}. {option}", callback_data=f"quiz_seq_{question_id}_{i}")
            ])
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –≤–∞—Ä–∏–∞–Ω—Ç—ã
        remaining_options = [i for i in range(len(options)) if str(i) not in current_sequence]
        for i in remaining_options:
            keyboard.append([
                InlineKeyboardButton(options[i], callback_data=f"quiz_seq_{question_id}_{i}")
            ])

        # –ö–Ω–æ–ø–∫–∏ —Å–±—Ä–æ—Å–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        keyboard.append([
            InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å", callback_data=f"quiz_reset_{question_id}"),
            InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"quiz_confirm_{question_id}")
        ])

    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞
    keyboard.append([
        InlineKeyboardButton("‚è© –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="quiz_skip")
    ])

    return InlineKeyboardMarkup(keyboard)


def test_results_keyboard(topic_id) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∞"""
    keyboard = [
        [
            InlineKeyboardButton("üìã –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑", callback_data="quiz_details"),
            InlineKeyboardButton("üîÑ –ü—Ä–æ–π—Ç–∏ –µ—â–µ —Ä–∞–∑", callback_data=f"quiz_repeat_{topic_id}")
        ],
        [
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="common_stats"),
            InlineKeyboardButton("üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", callback_data="common_achievements")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


def stats_period_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    keyboard = [
        [
            InlineKeyboardButton("–ó–∞ –Ω–µ–¥–µ–ª—é", callback_data="common_stats_week"),
            InlineKeyboardButton("–ó–∞ –º–µ—Å—è—Ü", callback_data="common_stats_month"),
            InlineKeyboardButton("–ó–∞ –≥–æ–¥", callback_data="common_stats_year"),
            InlineKeyboardButton("–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è", callback_data="common_stats_all")
        ],
        [
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="common_back_to_main")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


def achievements_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"""
    keyboard = [
        [
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="common_stats"),
            InlineKeyboardButton("üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤", callback_data="common_leaderboard")
        ],
        [
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="common_back_to_main")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


def leaderboard_period_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤"""
    keyboard = [
        [
            InlineKeyboardButton("–ó–∞ –Ω–µ–¥–µ–ª—é", callback_data="common_leaderboard_week"),
            InlineKeyboardButton("–ó–∞ –º–µ—Å—è—Ü", callback_data="common_leaderboard_month")
        ],
        [
            InlineKeyboardButton("–ó–∞ –≥–æ–¥", callback_data="common_leaderboard_year"),
            InlineKeyboardButton("–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è", callback_data="common_leaderboard_all")
        ],
        [
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ", callback_data="common_stats"),
            InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="common_back_to_main")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from datetime import datetime

from database.models import User
from database.db_manager import get_session
from config import ADMINS
from keyboards.student_kb import student_main_keyboard
from keyboards.parent_kb import parent_main_keyboard
from keyboards.admin_kb import admin_main_keyboard

logger = logging.getLogger(__name__)

class StartHandler:
    def __init__(self):
        pass

    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º"""
        user = update.effective_user
        user_id = user.id
        username = user.username
        full_name = f"{user.first_name} {user.last_name if user.last_name else ''}"

        # –û–ø—Ä–µ–¥–µ–ª–∏–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–¥–º–∏–Ω/—Ä–æ–¥–∏—Ç–µ–ª—å/—É—á–µ–Ω–∏–∫)
        role = "admin" if str(user_id) in ADMINS else None

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
        with get_session() as session:
            db_user = session.query(User).filter(User.telegram_id == user_id).first()

            if not db_user:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å (–µ—Å–ª–∏ –Ω–µ –∞–¥–º–∏–Ω)
                if role is None:
                    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å
                    keyboard = [
                        [
                            InlineKeyboardButton("üë®‚Äçüéì –Ø —É—á–µ–Ω–∏–∫", callback_data="common_role_student"),
                            InlineKeyboardButton("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –Ø —Ä–æ–¥–∏—Ç–µ–ª—å", callback_data="common_role_parent")
                        ]
                    ]
                    reply_markup = InlineKeyboardMarkup(keyboard)

                    await update.message.reply_text(
                        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {full_name}! üëã\n\n"
                        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –ø–æ –∏—Å—Ç–æ—Ä–∏–∏.\n\n"
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ, –∫–µ–º –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å:",
                        reply_markup=reply_markup
                    )
                    return

                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                new_user = User(
                    telegram_id=user_id,
                    username=username,
                    full_name=full_name,
                    role=role or "student",  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º —É—á–µ–Ω–∏–∫–∞
                    created_at=datetime.now(),
                    last_active=datetime.now()
                )
                session.add(new_user)
                session.commit()

                # –°–æ–æ–±—â–∞–µ–º –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
                if role == "admin":
                    await update.message.reply_text(
                        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {full_name}! üëã\n\n"
                        "–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.\n"
                        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
                    )
                else:
                    await update.message.reply_text(
                        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {full_name}! üëã\n\n"
                        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –ø–æ –∏—Å—Ç–æ—Ä–∏–∏.\n"
                        "–í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω."
                    )
                    await self.show_main_menu(update, role or "student")
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                db_user.username = username
                db_user.full_name = full_name
                db_user.last_active = datetime.now()
                session.commit()

                # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if db_user.role == "admin":
                    await update.message.reply_text(
                        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {full_name}! üëã\n\n"
                        "–í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.\n"
                        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
                    )
                else:
                    await update.message.reply_text(
                        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {full_name}! üëã\n\n"
                        "–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞ –≤ –±–æ—Ç–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –ø–æ –∏—Å—Ç–æ—Ä–∏–∏."
                    )
                    await self.show_main_menu(update, db_user.role)

    def get_help_text(self, role: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if role == "student":
            return (
                "üîç *–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è —É—á–µ–Ω–∏–∫–∞*\n\n"
                "*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
                "‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
                "‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
                "‚Ä¢ /test - –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
                "‚Ä¢ /stats - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
                "‚Ä¢ /achievements - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n"
                "‚Ä¢ /mycode - –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ —Ä–æ–¥–∏—Ç–µ–ª—è\n\n"
                "*–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Ç–µ—Å—Ç—ã:*\n"
                "1. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /test\n"
                "2. –û—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã–±–∏—Ä–∞—è –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤\n"
                "3. –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è\n\n"
                "*–°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:*\n"
                "–ü–æ–ª—É—á–∞–π—Ç–µ –±–∞–ª–ª—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤!"
            )
        elif role == "parent":
            return (
                "üîç *–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è*\n\n"
                "*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
                "‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
                "‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
                "‚Ä¢ /link - –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç —É—á–µ–Ω–∏–∫–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–¥)\n"
                "‚Ä¢ /report - –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç –æ–± —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ —É—á–µ–Ω–∏–∫–∞\n"
                "‚Ä¢ /settings - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n\n"
                "*–ö–∞–∫ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç —É—á–µ–Ω–∏–∫–∞:*\n"
                "1. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ —É—á–µ–Ω–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /mycode\n"
                "2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /link —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –∫–æ–¥–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, /link 123456)\n"
                "3. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–∏–≤—è–∑–∫–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –æ—Ç—á–µ—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n\n"
                "*–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:*\n"
                "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤ –∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤"
            )
        elif role == "admin":
            return (
                "üîç *–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n"
                "*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
                "‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
                "‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
                "‚Ä¢ /admin - –û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
                "‚Ä¢ /add_question - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å\n"
                "‚Ä¢ /import - –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–∑ JSON —Ñ–∞–π–ª–∞\n\n"
                "*–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç:*\n"
                "‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–º–∞–º–∏ –∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏\n"
                "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
                "‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–æ—Ç–∞\n\n"
                "*–°—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤–æ–ø—Ä–æ—Å–æ–≤:*\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /import –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–æ—Ä–º–∞—Ç–µ —Ñ–∞–π–ª–∞"
            )
        else:
            return (
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º"
            )

    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏"""
        user_id = update.effective_user.id

        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        with get_session() as session:
            user = session.query(User).filter(User.telegram_id == user_id).first()

            if not user:
                message = "–ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start"
                if update.callback_query:
                    await update.callback_query.edit_message_text(message)
                else:
                    await update.message.reply_text(message)
                return

            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
            help_text = self.get_help_text(user.role)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–∫—É
            if update.callback_query:
                await update.callback_query.edit_message_text(
                    help_text,
                    parse_mode="Markdown"
                )
            else:
                await update.message.reply_text(
                    help_text,
                    parse_mode="Markdown"
                )

    async def show_main_menu(self, update: Update, role: str) -> None:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if role == "student":
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É—á–µ–Ω–∏–∫–∞
            reply_markup = student_main_keyboard()
        elif role == "parent":
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è
            reply_markup = parent_main_keyboard()
        elif role == "admin":
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            reply_markup = admin_main_keyboard()
        else:
            # –ï—Å–ª–∏ —Ä–æ–ª—å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É—á–µ–Ω–∏–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            reply_markup = student_main_keyboard()

        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup
        )

    async def mycode_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mycode –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞ –ø—Ä–∏–≤—è–∑–∫–∏ —Ä–æ–¥–∏—Ç–µ–ª—è"""
        user_id = update.effective_user.id

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è —É—á–µ–Ω–∏–∫–æ–º
        with get_session() as session:
            user = session.query(User).filter(User.telegram_id == user_id).first()

            if not user:
                await update.message.reply_text(
                    "–ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start"
                )
                return

            if user.role != "student":
                await update.message.reply_text(
                    "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤."
                )
                return

            # –ö–æ–¥ –ø—Ä–∏–≤—è–∑–∫–∏ - —ç—Ç–æ telegram_id —É—á–µ–Ω–∏–∫–∞
            code = str(user_id)

            await update.message.reply_text(
                f"üì± *–í–∞—à –∫–æ–¥ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ —Ä–æ–¥–∏—Ç–µ–ª—è:*\n\n"
                f"`{code}`\n\n"
                f"–ü–µ—Ä–µ–¥–∞–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—é, —á—Ç–æ–±—ã –æ–Ω –º–æ–≥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à—É —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å.\n"
                f"–†–æ–¥–∏—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /link {code}",
                parse_mode="Markdown"
            )